/*
 * Hammurapi
 * Automated Java code review system. 
 * Copyright (C) 2004  Hammurapi Group
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * URL: http://www.hammurapi.org
 * e-Mail: support@hammurapi.biz

*/
package org.hammurapi.inspectors.testcases.violations;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;

import org.hammurapi.inspectors.testcases.HammurapiTestCasesException;

/**
 * CodeTooLongRule
 * @author  Pavel Vlasov
 * @version $Revision: 1.1 $
 */
public class CodeTooLongRuleViolationTestCase {

	private static org.apache.log4j.Logger logger =
		org.apache.log4j.Logger.getRootLogger();

	private static final String FILE_ERROR_TXT = "File error";
	private static final String CASE_TXT1 = "case 1";
	private static final String CASE_TXT2 = "case 2";
	private static final String CASE_TXT3 = "case 3";

	// --- VIOLATION ---
	/** Java doc automaticaly generated by Hammurapi */
	public int getByte(final String fName,  final String which)
		throws HammurapiTestCasesException {
			
		if (CASE_TXT1.compareTo(which)==0) {
			try {
				InputStream is = new FileInputStream(fName);
				return is.read();

			} catch (IOException e) {
				logger.fatal(FILE_ERROR_TXT, e);
				throw new HammurapiTestCasesException(e);
			}
		} else if (CASE_TXT2.compareTo(which)==0) {
			try {
				InputStream is = new FileInputStream(fName);
				is.read();
				return is.read();

			} catch (IOException e) {
				logger.fatal(FILE_ERROR_TXT, e);
				throw new HammurapiTestCasesException(e);
			}
		} else if (CASE_TXT3.compareTo(which)==0) {
			try {
				InputStream is = new FileInputStream(fName);
				is.read();
				is.read();
				return is.read();

			} catch (IOException e) {
				logger.fatal(FILE_ERROR_TXT, e);
				throw new HammurapiTestCasesException(e);
			}
		} else {
			try {
				InputStream is = new FileInputStream(fName);
				is.read();
				is.read();
				is.read();
				return is.read();

			} catch (IOException e) {
				logger.fatal(FILE_ERROR_TXT, e);
				throw new HammurapiTestCasesException(e);
			}
		}
	}
	// --- END VIOLATION ---
	
}

