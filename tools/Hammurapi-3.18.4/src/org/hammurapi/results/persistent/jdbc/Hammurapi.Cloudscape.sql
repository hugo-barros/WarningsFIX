CREATE TABLE PRIMARY_KEY (
       KEY_NAME VARCHAR(250) NOT NULL
     , KEY_VALUE INTEGER DEFAULT 0 NOT NULL
     , PRIMARY KEY (KEY_NAME)
);

CREATE TABLE MESSAGE (
       ID INT NOT NULL PRIMARY KEY
     , MESSAGE_VALUE VARCHAR(4000) NOT NULL
     , CONSTRAINT UQ_MESSAGE_VALUE UNIQUE (MESSAGE_VALUE)
);

CREATE TABLE RESULT (
       ID INTEGER NOT NULL
     , TYPE VARCHAR(100) NOT NULL
     , CODEBASE BIGINT DEFAULT 0
     , RESULT_DATE TIMESTAMP
     , MAX_SEVERITY SMALLINT
     , REVIEWS BIGINT DEFAULT 0
     , VIOLATION_LEVEL DOUBLE DEFAULT 0
     , VIOLATIONS BIGINT DEFAULT 0
     , WAIVED_VIOLATIONS BIGINT DEFAULT 0
     , NAME VARCHAR(4000)
     , HAS_WARNINGS INTEGER DEFAULT 0
     , COMMITED SMALLINT DEFAULT 0 NOT NULL
     , COMPILATION_UNIT INTEGER
     , IS_NEW SMALLINT DEFAULT 0 NOT NULL
     , PRIMARY KEY (ID)
);

CREATE TABLE METRIC (
       RESULT_ID INTEGER DEFAULT 0 NOT NULL
     , NAME VARCHAR(250) NOT NULL
     , PRIMARY KEY (RESULT_ID, NAME)
     , CONSTRAINT FK_METRIC_RESULT FOREIGN KEY (RESULT_ID)
                  REFERENCES RESULT (ID) ON DELETE CASCADE
);

CREATE TABLE REPORT (
       ID INTEGER NOT NULL
     , NAME VARCHAR(250)
     , REPORT_NUMBER INTEGER
     , RESULT_ID INTEGER
     , EXECUTION_TIME BIGINT
     , HOST_NAME VARCHAR(4000)
     , HOST_ID VARCHAR(250)
     , DESCRIPTION VARCHAR(4000)
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_REPORT_RESULT FOREIGN KEY (RESULT_ID)
                  REFERENCES RESULT (ID)
);

CREATE TABLE INSPECTOR (
       REPORT_ID INTEGER NOT NULL
     , NAME VARCHAR(15) NOT NULL
     , SEVERITY SMALLINT NOT NULL
     , DESCRIPTION VARCHAR(4000)
     , CONFIG_INFO VARCHAR(4000)
     , PRIMARY KEY (REPORT_ID, NAME)
     , CONSTRAINT FK_INSP_REPORT FOREIGN KEY (REPORT_ID)
                  REFERENCES REPORT (ID) ON DELETE CASCADE
);
CREATE INDEX IX_INSPECTOR_ORDER ON INSPECTOR (NAME, DESCRIPTION, CONFIG_INFO, REPORT_ID);

CREATE TABLE ANNOTATION (
       ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY
     , RESULT_ID INTEGER NOT NULL
     , HANDLE VARCHAR(4000)
     , CONSTRAINT FK_ANN_RESULT FOREIGN KEY (RESULT_ID)
                  REFERENCES RESULT (ID) ON DELETE CASCADE
);

CREATE TABLE MEASUREMENT (
       ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY
     , RESULT_ID INTEGER DEFAULT 0 NOT NULL
     , NAME VARCHAR(250) NOT NULL
     , MEASUREMENT_VALUE DOUBLE NOT NULL
     , SOURCE VARCHAR(4000)
     , LINE INTEGER DEFAULT 0 NOT NULL
     , COL INTEGER DEFAULT 0 NOT NULL
     , CONSTRAINT FK_MEAS_METRIC FOREIGN KEY (RESULT_ID, NAME)
                  REFERENCES METRIC (RESULT_ID, NAME) ON DELETE CASCADE
);
CREATE INDEX IX_MEAS_VALUE ON MEASUREMENT (MEASUREMENT_VALUE);

CREATE TABLE RESULT_NET (
       PARENT INTEGER NOT NULL
     , CHILD INTEGER NOT NULL
     , PRIMARY KEY (PARENT, CHILD)
     , CONSTRAINT FK_RNET_PARENT FOREIGN KEY (PARENT)
                  REFERENCES RESULT (ID) ON DELETE CASCADE
     , CONSTRAINT FK_RNET_CHILD FOREIGN KEY (CHILD)
                  REFERENCES RESULT (ID) ON DELETE CASCADE
);

CREATE TABLE KINDRED (
       ANCESTOR INTEGER NOT NULL
     , DESCENDANT INTEGER NOT NULL
     , PRIMARY KEY (ANCESTOR, DESCENDANT)
     , CONSTRAINT FK_KINDRED_ANC FOREIGN KEY (ANCESTOR)
                  REFERENCES RESULT (ID) ON DELETE CASCADE
     , CONSTRAINT FK_KINDRED_DESC FOREIGN KEY (DESCENDANT)
                  REFERENCES RESULT (ID) ON DELETE CASCADE
);

CREATE TABLE VIOLATION (
       ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY
     , RESULT_ID INTEGER DEFAULT 0 NOT NULL
     , REPORT_ID INTEGER DEFAULT 0 NOT NULL
     , INSPECTOR VARCHAR(15)
     , MESSAGE_ID INT
     , SOURCE_ID INT
     , LINE INT DEFAULT 0 NOT NULL
     , COL INT DEFAULT 0 NOT NULL
     , SIGNATURE_POSTFIX VARCHAR(4000)
     , WAIVER_REASON INT
     , WAIVER_EXPIRES DATE
     , VIOLATION_TYPE SMALLINT DEFAULT 0 NOT NULL
     , CONSTRAINT FK_VIOL_RESULT FOREIGN KEY (RESULT_ID)
                  REFERENCES RESULT (ID) ON DELETE CASCADE
     , CONSTRAINT FK_VIOL_INSPECTOR FOREIGN KEY (REPORT_ID, INSPECTOR)
                  REFERENCES INSPECTOR (REPORT_ID, NAME) ON DELETE CASCADE
     , CONSTRAINT FK_VIOL_MESSAGE FOREIGN KEY (MESSAGE_ID)
                  REFERENCES MESSAGE (ID)
     , CONSTRAINT FK_VIOL_WREASON FOREIGN KEY (WAIVER_REASON)
                  REFERENCES MESSAGE (ID)
);

ALTER TABLE RESULT ADD CONSTRAINT FK_RESULT_CU FOREIGN KEY (COMPILATION_UNIT)
                  REFERENCES COMPILATION_UNIT (ID) ON DELETE CASCADE;

ALTER TABLE VIOLATION ADD CONSTRAINT FK_VIOLATION_CU FOREIGN KEY (SOURCE_ID)
                  REFERENCES COMPILATION_UNIT (ID) ON DELETE CASCADE;


