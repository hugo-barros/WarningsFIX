CREATE TABLE RESULT (
       ID INTEGER NOT NULL
     , CODEBASE BIGINT DEFAULT '0' NOT NULL
     , RESULT_DATE DATETIME NOT NULL
     , MAX_SEVERITY SMALLINT
     , REVIEWS BIGINT DEFAULT '0' NOT NULL
     , VIOLATION_LEVEL DOUBLE DEFAULT '0' NOT NULL
     , VIOLATIONS BIGINT DEFAULT '0' NOT NULL
     , WAIVED_VIOLATIONS BIGINT DEFAULT '0' NOT NULL
     , NAME VARCHAR(250) NOT NULL
     , HAS_WARNINGS BIT DEFAULT '0' NOT NULL
     , PACKAGE_NAME VARCHAR(250) NOT NULL
     , STATE TINYINT DEFAULT '0' NOT NULL
     , CU_SIZE BIGINT NOT NULL
     , CU_CHECKSUM BIGINT NOT NULL
     , PRIMARY KEY (ID)
);
CREATE INDEX IX_RESULT_PACKAGE_AND_NAME ON RESULT (PACKAGE_NAME, NAME);
CREATE INDEX "IX_RESULT_SQLC$E_NAME_SIZE_CHECKSUM" ON RESULT (PACKAGE_NAME, NAME, CU_SIZE, CU_CHECKSUM, HAS_WARNINGS);
CREATE INDEX IX_RESULT_PACKAGE ON RESULT (PACKAGE_NAME);

CREATE TABLE PRIMARY_KEY (
       KEY_NAME VARCHAR(50) NOT NULL
     , KEY_VALUE INTEGER DEFAULT '0' NOT NULL
     , PRIMARY KEY (KEY_NAME)
);

CREATE CACHED TABLE BASELINE_VIOLATION (
       ID INTEGER NOT NULL IDENTITY PRIMARY KEY
     , REPORT_NAME VARCHAR(50) NOT NULL
     , INSPECTOR VARCHAR(15) NOT NULL
     , SIGNATURE VARCHAR(2500) NOT NULL
     , IS_GONE BIT DEFAULT '0' NOT NULL
);
CREATE INDEX "IX_BASELINE_VIOLATION_SQLC$E_SIGNATURE" ON BASELINE_VIOLATION (REPORT_NAME, INSPECTOR, SIGNATURE);

CREATE CACHED TABLE INSPECTOR (
       PACKAGE_NAME VARCHAR(250) NOT NULL
     , NAME VARCHAR(15) NOT NULL
     , RESULT_ID INTEGER NOT NULL
     , SEVERITY SMALLINT NOT NULL
     , DESCRIPTION VARCHAR(250)
     , CONFIG_INFO VARCHAR(250)
     , VIOLATIONS INTEGER DEFAULT '0' NOT NULL
     , WAIVED_VIOLATIONS INTEGER DEFAULT '0' NOT NULL
     , PRIMARY KEY (PACKAGE_NAME, NAME, RESULT_ID)
     , CONSTRAINT FK_INSPECTOR_RESULT FOREIGN KEY (RESULT_ID)
                  REFERENCES RESULT (ID) ON DELETE CASCADE
);
CREATE INDEX IX_INSPECTOR_ORDER ON INSPECTOR (NAME, DESCRIPTION, CONFIG_INFO, PACKAGE_NAME);

CREATE CACHED TABLE WARNING (
       ID INTEGER NOT NULL IDENTITY PRIMARY KEY
     , RESULT_ID INTEGER NOT NULL
     , PACKAGE_NAME VARCHAR(250) NOT NULL
     , INSPECTOR VARCHAR(15)
     , MESSAGE VARCHAR(250)
     , SOURCE VARCHAR(250)
     , LINE INT
     , COL INT
     , SOURCE_SIGNATURE VARCHAR(250)
     , SOURCE_ID INT
     , CONSTRAINT FK_WARNING_INSPECTOR FOREIGN KEY (PACKAGE_NAME, INSPECTOR, RESULT_ID)
                  REFERENCES INSPECTOR (PACKAGE_NAME, NAME, RESULT_ID) ON DELETE CASCADE
     , CONSTRAINT FK_WARNING_RESULT FOREIGN KEY (RESULT_ID)
                  REFERENCES RESULT (ID) ON DELETE CASCADE
);
CREATE INDEX "IX_WARNING_SQLC$E_PACKAGE" ON WARNING (PACKAGE_NAME);

CREATE CACHED TABLE METRIC (
       RESULT_ID INTEGER NOT NULL
     , NAME VARCHAR(50) NOT NULL
     , MIN_VALUE DOUBLE NOT NULL
     , MAX_VALUE DOUBLE NOT NULL
     , METRIC_TOTAL DOUBLE NOT NULL
     , MEASUREMENTS INTEGER NOT NULL
     , PRIMARY KEY (RESULT_ID, NAME)
     , CONSTRAINT "FK_METRIC_SQLC$E_RESULT" FOREIGN KEY (RESULT_ID)
                  REFERENCES RESULT (ID) ON DELETE CASCADE
);

